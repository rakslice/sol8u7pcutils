diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/interpreter/RegisterFile.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/interpreter/RegisterFile.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/interpreter/RegisterFile.h	2018-09-25 19:57:51.010082000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/interpreter/RegisterFile.h	2018-09-26 00:53:28.710179000 -0700
@@ -174,7 +174,7 @@
 
         size_t bufferLength = (capacity + maxGlobals) * sizeof(Register);
     #if HAVE(MMAP)
-        m_buffer = reinterpret_cast<Register*>(mmap(0, bufferLength, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANON, VM_TAG_FOR_REGISTERFILE_MEMORY, 0));
+        m_buffer = reinterpret_cast<Register*>(mmap(0, bufferLength, PROT_READ|PROT_WRITE, MAP_PRIVATE/* |MAP_ANON */, VM_TAG_FOR_REGISTERFILE_MEMORY, 0));
         if (m_buffer == MAP_FAILED) {
 #if PLATFORM(WINCE)
             fprintf(stderr, "Could not allocate register file: %d\n", GetLastError());
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorFixedVMPool.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorFixedVMPool.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorFixedVMPool.cpp	2018-09-25 19:57:50.880088000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorFixedVMPool.cpp	2018-09-26 00:53:28.720012000 -0700
@@ -294,7 +294,7 @@
         intptr_t randomLocation = arc4random() & ((1 << 25) - 1);
         randomLocation += (1 << 24);
         randomLocation <<= 21;
-        m_base = mmap(reinterpret_cast<void*>(randomLocation), m_totalHeapSize, INITIAL_PROTECTION_FLAGS, MAP_PRIVATE | MAP_ANON, VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY, 0);
+        m_base = mmap(reinterpret_cast<void*>(randomLocation), m_totalHeapSize, INITIAL_PROTECTION_FLAGS, MAP_PRIVATE /* | MAP_ANON */, VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY, 0);
         if (!m_base)
             CRASH();
 
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorPosix.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorPosix.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorPosix.cpp	2018-09-25 19:57:50.880119000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/jit/ExecutableAllocatorPosix.cpp	2018-09-26 00:53:28.720040000 -0700
@@ -44,7 +44,7 @@
 
 ExecutablePool::Allocation ExecutablePool::systemAlloc(size_t n)
 {
-    void* allocation = mmap(NULL, n, INITIAL_PROTECTION_FLAGS, MAP_PRIVATE | MAP_ANON, VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY, 0);
+  void* allocation = mmap(NULL, n, INITIAL_PROTECTION_FLAGS, MAP_PRIVATE /*| MAP_ANON */, VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY, 0);
     if (allocation == MAP_FAILED)
         CRASH();
     ExecutablePool::Allocation alloc = { reinterpret_cast<char*>(allocation), n };
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2018-09-25 19:57:51.070063000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Collector.cpp	2018-09-26 00:53:28.720068000 -0700
@@ -262,7 +262,7 @@
     if (BLOCK_SIZE > pagesize)
         extra = BLOCK_SIZE - pagesize;
 
-    void* mmapResult = mmap(NULL, BLOCK_SIZE + extra, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);
+    void* mmapResult = mmap(NULL, BLOCK_SIZE + extra, PROT_READ | PROT_WRITE, MAP_PRIVATE /* | MAP_ANON */, -1, 0);
     uintptr_t address = reinterpret_cast<uintptr_t>(mmapResult);
 
     size_t adjust = 0;
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Error.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Error.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Error.h	2018-09-25 20:28:19.420089000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/Error.h	2018-09-26 00:53:28.720084000 -0700
@@ -23,7 +23,7 @@
 #ifndef Error_h
 #define Error_h
 
-#include <stdint.h>
+/* #include <stdint.h> */
 
 namespace JSC {
 
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime: Error.h.orig
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime: Error.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h	2018-09-25 20:28:19.420107000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSImmediate.h	2018-09-26 00:53:28.720103000 -0700
@@ -34,7 +34,7 @@
 #include <limits>
 #include <limits.h>
 #include <stdarg.h>
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <stdlib.h>
 
 namespace JSC {
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime: JSImmediate.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.cpp	2018-09-25 20:28:19.420122000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.cpp	2018-09-26 00:53:28.730006000 -0700
@@ -37,6 +37,14 @@
 
 static const double D32 = 4294967296.0;
 
+double trunc(double x) {
+	if (x < 0) {
+		return ceil(x);
+	} else {
+		return floor(x);
+	}
+}
+
 // ECMA 9.4
 double JSValue::toInteger(ExecState* exec) const
 {
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime: JSValue.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h	2018-09-25 20:28:19.420139000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSValue.h	2018-09-26 00:53:28.730024000 -0700
@@ -27,7 +27,7 @@
 #include "ConstructData.h"
 #include <math.h>
 #include <stddef.h> // for size_t
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <wtf/AlwaysInline.h>
 #include <wtf/Assertions.h>
 #include <wtf/HashTraits.h>
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime: JSValue.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/MarkStackPosix.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/MarkStackPosix.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/MarkStackPosix.cpp	2018-09-25 19:57:51.030014000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/MarkStackPosix.cpp	2018-09-26 00:53:28.730040000 -0700
@@ -57,7 +57,7 @@
 #if defined (__SYMBIAN32__)
     return fastMalloc(size);
 #else
-    return mmap(0, size, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);
+    return mmap(0, size, PROT_READ | PROT_WRITE, MAP_PRIVATE /* | MAP_ANON */, -1, 0);
 #endif
 }
 void MarkStack::releaseStack(void* addr, size_t size)
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/UString.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/UString.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime/UString.h	2018-09-25 20:28:19.420156000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/runtime/UString.h	2018-09-26 00:53:28.730058000 -0700
@@ -24,7 +24,7 @@
 #define UString_h
 
 #include "Collector.h"
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <string.h>
 #include <wtf/Assertions.h>
 #include <wtf/CrossThreadRefCounted.h>
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/runtime: UString.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/CurrentTime.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/CurrentTime.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/CurrentTime.cpp	2018-09-25 20:28:19.440007000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/CurrentTime.cpp	2018-09-26 00:53:28.730075000 -0700
@@ -41,7 +41,7 @@
 #undef WIN32_LEAN_AND_MEAN
 #include <windows.h>
 #include <math.h>
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <time.h>
 
 #if USE(QUERY_PERFORMANCE_COUNTER)
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: CurrentTime.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/DateMath.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/DateMath.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/DateMath.cpp	2018-09-25 20:28:19.440027000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/DateMath.cpp	2018-09-26 00:53:28.730096000 -0700
@@ -53,7 +53,7 @@
 #include <algorithm>
 #include <limits.h>
 #include <limits>
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <time.h>
 
 
@@ -909,6 +909,14 @@
     return (ymdhmsToSeconds(year, month + 1, day, hour, minute, second) - (offset * 60.0)) * msPerSecond;
 }
 
+double trunc(double x) {
+	if (x < 0) {
+		return ceil(x);
+	} else {
+		return floor(x);
+	}
+}
+
 double timeClip(double t)
 {
     if (!isfinite(t))
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: DateMath.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastAllocBase.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastAllocBase.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastAllocBase.h	2018-09-25 20:28:19.440043000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastAllocBase.h	2018-09-26 00:53:28.740013000 -0700
@@ -76,7 +76,7 @@
 //
 
 #include <new>
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <stdlib.h>
 #include <string.h>
 #include "Assertions.h"
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: FastAllocBase.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastMalloc.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastMalloc.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastMalloc.cpp	2018-09-25 20:28:19.440075000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/FastMalloc.cpp	2018-09-26 00:53:28.740046000 -0700
@@ -363,7 +363,7 @@
 #else // FORCE_SYSTEM_MALLOC
 
 #if HAVE(STDINT_H)
-#include <stdint.h>
+/* #include <stdint.h> */
 #elif HAVE(INTTYPES_H)
 #include <inttypes.h>
 #else
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: FastMalloc.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashFunctions.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashFunctions.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashFunctions.h	2018-09-25 20:28:19.450005000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashFunctions.h	2018-09-26 00:53:28.740062000 -0700
@@ -22,7 +22,7 @@
 #define WTF_HashFunctions_h
 
 #include "RefPtr.h"
-#include <stdint.h>
+/* #include <stdint.h> */
 
 namespace WTF {
 
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: HashFunctions.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/RandomNumber.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/RandomNumber.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/RandomNumber.cpp	2018-09-25 20:28:19.450020000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/RandomNumber.cpp	2018-09-26 00:53:28.750005000 -0700
@@ -31,7 +31,7 @@
 
 #include <limits>
 #include <limits.h>
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <stdlib.h>
 
 #if PLATFORM(WINCE)
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: RandomNumber.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCPageMap.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCPageMap.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCPageMap.h	2018-09-25 20:28:19.450036000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCPageMap.h	2018-09-26 00:53:28.750022000 -0700
@@ -46,7 +46,7 @@
 #define TCMALLOC_PAGEMAP_H__
 
 #if HAVE(STDINT_H)
-#include <stdint.h>
+/* #include <stdint.h> */
 #elif HAVE(INTTYPES_H)
 #include <inttypes.h>
 #else
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: TCPageMap.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSpinLock.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSpinLock.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSpinLock.h	2018-09-25 20:28:19.450051000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSpinLock.h	2018-09-26 00:53:28.750038000 -0700
@@ -40,7 +40,7 @@
 #include <sched.h>      /* For sched_yield() */
 
 #if HAVE(STDINT_H)
-#include <stdint.h>
+/* #include <stdint.h> */
 #elif HAVE(INTTYPES_H)
 #include <inttypes.h>
 #else
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: TCSpinLock.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSystemAlloc.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSystemAlloc.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSystemAlloc.cpp	2018-09-25 20:28:19.450067000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/TCSystemAlloc.cpp	2018-09-26 00:53:28.750059000 -0700
@@ -40,7 +40,7 @@
 #include "UnusedParam.h"
 
 #if HAVE(STDINT_H)
-#include <stdint.h>
+/* #include <stdint.h> */
 #elif HAVE(INTTYPES_H)
 #include <inttypes.h>
 #else
@@ -177,7 +177,7 @@
   }
   void* result = mmap(NULL, size + extra,
                       PROT_READ | PROT_WRITE,
-                      MAP_PRIVATE|MAP_ANONYMOUS,
+                      MAP_PRIVATE /*|MAP_ANONYMOUS */,
                       -1, 0);
   if (result == reinterpret_cast<void*>(MAP_FAILED)) {
     mmap_failure = true;
@@ -442,7 +442,7 @@
 
 void TCMalloc_SystemRelease(void* start, size_t length)
 {
-  void* newAddress = mmap(reinterpret_cast<char*>(start), length, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS | MAP_FIXED, -1, 0);
+  void* newAddress = mmap(reinterpret_cast<char*>(start), length, PROT_READ | PROT_WRITE, MAP_PRIVATE /* | MAP_ANONYMOUS */ | MAP_FIXED, -1, 0);
   // If the mmap failed then that's ok, we just won't return the memory to the system.
   ASSERT_UNUSED(newAddress, newAddress == start || newAddress == reinterpret_cast<void*>(MAP_FAILED));
 }
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: TCSystemAlloc.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	2018-09-25 20:28:19.460014000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h	2018-09-26 00:53:28.750076000 -0700
@@ -97,7 +97,7 @@
 QT_END_NAMESPACE
 #endif
 
-#include <stdint.h>
+/* #include <stdint.h> */
 
 // For portability, we do not use thread-safe statics natively supported by some compilers (e.g. gcc).
 #define AtomicallyInitializedStatic(T, name) \
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: Threading.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/dtoa.cpp qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/dtoa.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/dtoa.cpp	2018-09-25 20:28:19.460036000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/dtoa.cpp	2018-09-26 00:53:28.760016000 -0700
@@ -142,7 +142,7 @@
 #endif
 #include <float.h>
 #include <math.h>
-#include <stdint.h>
+/* #include <stdint.h> */
 #include <stdlib.h>
 #include <string.h>
 #include <wtf/AlwaysInline.h>
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf: dtoa.cpp.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h	2018-09-25 20:28:19.460053000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/qt4/UnicodeQt4.h	2018-09-26 00:53:28.760033000 -0700
@@ -28,7 +28,7 @@
 
 #include <config.h>
 
-#include <stdint.h>
+/* #include <stdint.h> */
 
 #if QT_VERSION >= 0x040300
 QT_BEGIN_NAMESPACE
Only in qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/javascriptcore/JavaScriptCore/wtf/unicode/qt4: UnicodeQt4.h.rej
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/sqlite/sqlite3.c qt-everywhere-opensource-src-4.6.4/src/3rdparty/sqlite/sqlite3.c
--- qt-everywhere-opensource-src-4.6.4.orig/src/3rdparty/sqlite/sqlite3.c	2018-09-25 19:57:49.450085000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/3rdparty/sqlite/sqlite3.c	2018-09-26 00:53:28.810088000 -0700
@@ -571,6 +571,9 @@
 # include <ioLib.h>
 #endif
 
+/* solaris 2.6 pthreads doesn't have these */
+#define SQLITE_HOMEGROWN_RECURSIVE_MUTEX
+
 #include <stdarg.h>     /* Needed for the definition of va_list */
 
 /*
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/corelib/io/qfsfileengine_unix.cpp qt-everywhere-opensource-src-4.6.4/src/corelib/io/qfsfileengine_unix.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/corelib/io/qfsfileengine_unix.cpp	2018-09-25 19:57:45.840131000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/corelib/io/qfsfileengine_unix.cpp	2018-09-26 00:53:28.810111000 -0700
@@ -1335,7 +1335,7 @@
         errno = EINVAL;
     }
 #else
-    void *mapAddress = QT_MMAP((void*)0, realSize,
+    void *mapAddress = QT_MMAP((char*)0, realSize,
                    access, MAP_SHARED, nativeHandle(), realOffset);
 #endif
     if (MAP_FAILED != mapAddress) {
@@ -1371,7 +1371,7 @@
 
     uchar *start = ptr - maps[ptr].first;
     size_t len = maps[ptr].second;
-    if (-1 == munmap(start, len)) {
+    if (-1 == munmap((char *)start, len)) {
         q->setError(QFile::UnspecifiedError, qt_error_string(errno));
         return false;
     }
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/corelib/kernel/qsharedmemory_unix.cpp qt-everywhere-opensource-src-4.6.4/src/corelib/kernel/qsharedmemory_unix.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/corelib/kernel/qsharedmemory_unix.cpp	2018-09-25 19:57:46.180051000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/corelib/kernel/qsharedmemory_unix.cpp	2018-09-26 00:53:28.810128000 -0700
@@ -252,7 +252,7 @@
 bool QSharedMemoryPrivate::detach()
 {
     // detach from the memory segment
-    if (-1 == shmdt(memory)) {
+  if (-1 == shmdt((char *) memory)) {
         QString function = QLatin1String("QSharedMemory::detach");
         switch (errno) {
         case EINVAL:
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/corelib/tools/qunicodetables.cpp qt-everywhere-opensource-src-4.6.4/src/corelib/tools/qunicodetables.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/corelib/tools/qunicodetables.cpp	2018-09-25 19:57:46.000046000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/corelib/tools/qunicodetables.cpp	2018-09-26 02:35:48.760297000 -0700
@@ -4336,13 +4336,15 @@
     return uc_properties + index;
 }
 
-Q_CORE_EXPORT const QUnicodeTables::Properties * QT_FASTCALL QUnicodeTables::properties(uint ucs4)
+/* Q_CORE_EXPORT const QUnicodeTables::Properties * QT_FASTCALL QUnicodeTables::properties(uint ucs4) */
+Q_CORE_EXPORT const QUnicodeTables::Properties * QUnicodeTables::properties(uint ucs4)
 {
     int index = GET_PROP_INDEX(ucs4);
     return uc_properties + index;
 }
 
-Q_CORE_EXPORT const QUnicodeTables::Properties * QT_FASTCALL QUnicodeTables::properties(ushort ucs2)
+/* Q_CORE_EXPORT const QUnicodeTables::Properties * QT_FASTCALL QUnicodeTables::properties(ushort ucs2) */
+Q_CORE_EXPORT const QUnicodeTables::Properties * QUnicodeTables::properties(ushort ucs2)
 {
     int index = GET_PROP_INDEX_UCS2(ucs2);
     return uc_properties + index;
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/corelib/tools/qunicodetables_p.h qt-everywhere-opensource-src-4.6.4/src/corelib/tools/qunicodetables_p.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/corelib/tools/qunicodetables_p.h	2018-09-25 19:57:46.000147000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/corelib/tools/qunicodetables_p.h	2018-09-26 02:36:28.930003000 -0700
@@ -81,8 +81,10 @@
         ushort wordBreak : 8;
         ushort sentenceBreak : 8;
     };
-    Q_CORE_EXPORT const Properties * QT_FASTCALL properties(uint ucs4);
-    Q_CORE_EXPORT const Properties * QT_FASTCALL properties(ushort ucs2);
+    /* Q_CORE_EXPORT const Properties * QT_FASTCALL properties(uint ucs4); */
+    Q_CORE_EXPORT const Properties * properties(uint ucs4);
+    /* Q_CORE_EXPORT const Properties * QT_FASTCALL properties(ushort ucs2); */
+    Q_CORE_EXPORT const Properties * properties(ushort ucs2);
 
     // See http://www.unicode.org/reports/tr24/tr24-5.html
 
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/network/kernel/qhostinfo_unix.cpp qt-everywhere-opensource-src-4.6.4/src/network/kernel/qhostinfo_unix.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/network/kernel/qhostinfo_unix.cpp	2018-09-25 19:57:41.450058000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/network/kernel/qhostinfo_unix.cpp	2018-09-26 00:53:28.820013000 -0700
@@ -59,6 +59,7 @@
 #if defined(Q_OS_VXWORKS)
 #  include <hostLib.h>
 #else
+#  include <arpa/nameser.h>
 #  include <resolv.h>
 #endif
 
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/network/socket/qnativesocketengine_unix.cpp qt-everywhere-opensource-src-4.6.4/src/network/socket/qnativesocketengine_unix.cpp
--- qt-everywhere-opensource-src-4.6.4.orig/src/network/socket/qnativesocketengine_unix.cpp	2018-09-25 19:57:41.450009000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/network/socket/qnativesocketengine_unix.cpp	2018-09-26 00:53:28.820033000 -0700
@@ -797,7 +797,7 @@
     // Determine the socket type (UDP/TCP)
     int value = 0;
     QT_SOCKOPTLEN_T valueSize = sizeof(int);
-    if (::getsockopt(socketDescriptor, SOL_SOCKET, SO_TYPE, &value, &valueSize) == 0) {
+    if (::getsockopt(socketDescriptor, SOL_SOCKET, SO_TYPE, (char *) &value, &valueSize) == 0) {
         if (value == SOCK_STREAM)
             socketType = QAbstractSocket::TcpSocket;
         else if (value == SOCK_DGRAM)
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/src/network/socket/qnet_unix_p.h qt-everywhere-opensource-src-4.6.4/src/network/socket/qnet_unix_p.h
--- qt-everywhere-opensource-src-4.6.4.orig/src/network/socket/qnet_unix_p.h	2018-09-25 19:57:41.410072000 -0700
+++ qt-everywhere-opensource-src-4.6.4/src/network/socket/qnet_unix_p.h	2018-09-26 00:53:28.820051000 -0700
@@ -69,6 +69,7 @@
 #if defined(Q_OS_VXWORKS)
 #  include <hostLib.h>
 #else
+#  include <arpa/nameser.h>
 #  include <resolv.h>
 #endif
 
@@ -194,7 +195,7 @@
 #ifdef Q_OS_VXWORKS
     EINTR_LOOP(ret, ::sendto(sockfd, (char *) buf, len, flags, (struct sockaddr *) to, tolen));
 #else
-    EINTR_LOOP(ret, ::sendto(sockfd, buf, len, flags, to, tolen));
+    EINTR_LOOP(ret, ::sendto(sockfd, (const char *)buf, len, flags, to, tolen));
 #endif
     return ret;
 }
diff '--exclude=.deps' '--exclude=*.log' -ur qt-everywhere-opensource-src-4.6.4.orig/tools/qtconfig/qtconfig.pro qt-everywhere-opensource-src-4.6.4/tools/qtconfig/qtconfig.pro
--- qt-everywhere-opensource-src-4.6.4.orig/tools/qtconfig/qtconfig.pro	2018-09-25 19:57:40.990035000 -0700
+++ qt-everywhere-opensource-src-4.6.4/tools/qtconfig/qtconfig.pro	2018-09-26 00:53:28.820068000 -0700
@@ -7,6 +7,8 @@
 LANGUAGE = C++
 QT += qt3support
 
+LIBS += /usr/tgcware/lib/libstdc++.so.6
+
 contains(QT_CONFIG, gstreamer):LIBS += $$QT_LIBS_GSTREAMER -lgstinterfaces-0.10 -lgstvideo-0.10 -lgstbase-0.10
 contains(QT_CONFIG, gstreamer):QMAKE_CXXFLAGS += $$QT_CFLAGS_GSTREAMER
 contains(QT_CONFIG, gstreamer):QT += phonon
